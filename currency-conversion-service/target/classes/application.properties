server.port=8100
#It will get the config from: http://localhost:8888/currency-conversion/default
#The profile selected is: default
spring.application.name=currency-conversion
spring.config.import=optional:configserver:http://localhost:8888

#H2 configuration (to be deleted in a near future, h2 will be used in application-local.properties).
spring.datasource.url=jdbc:h2:mem:testdb-conversion

#Reason: By default, data.sql scripts are now run before Hibernate is initialized.
# This aligns the behavior of basic script-based initialization with that of Flyway and Liquibase.
# If you want to use data.sql to populate a schema created by Hibernate,
# set spring.jpa.defer-datasource-initialization to true.
# While mixing database initialization technologies is not recommended,
# this will also allow you to use a schema.sql script to build upon a Hibernate-created schema before it?s populated via data.sql.
spring.jpa.defer-datasource-initialization=true

#This property will allow us to start logging the SQL in log whenever a statement is executed.
spring.h2.console.enabled=true

#JPA
#This property will allow us to start logging the SQL in log whenever a statement is executed.
spring.jpa.show-sql=true

#Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

# sleuth

#1.0. What we are configuring is to trace every request.
#If you'd want to trace only let's say, 10 percent of the requests.
#So, if this is production and let's say, you'd want to only trace five percent of the requests,
# you can #put it as 0.05.
#However, we'd want to trace every request in our test environment.
spring.sleuth.sampler.probability=1.0